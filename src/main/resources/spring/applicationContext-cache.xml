<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<!-- xmemcached begin -->
	<bean name="memcachedClientBuilder"
		class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
		<constructor-arg index="0">
			<list value-type="java.net.InetSocketAddress">
				<ref local="inetAddress1" />
			</list>
		</constructor-arg>
		<constructor-arg index="1">
			<list value-type="java.lang.Integer">
				<value>${server1.weight}</value>
			</list>
		</constructor-arg>
		<property name="connectionPoolSize"
			value="${connectionPoolSize}">
		</property>
	</bean>

	<bean id="inetAddress1" class="java.net.InetSocketAddress">
		<constructor-arg index="0" value="${server1.ip}" />
		<constructor-arg index="1" value="${server1.port}" />
	</bean>

	<bean id="xMemCachedManager"
		class="com.sinovatech.search.cache.xmemcached.XMemCachedManager">
		<property name="useMemcache" value="${use.memcache}" />
		<property name="opTimeout" value="${xmemcache.read.timeout}" />
	</bean>

	<!-- xmemcached end -->

	<!-- another implementation	 -->
	<bean id="memCachedManager"
		class="com.sinovatech.search.cache.memcached.MemCachedManager"
		factory-method="getInstance">
	</bean>

	<bean id="CachedManager"
		class="com.sinovatech.search.cache.manager.CachedManagerImpl">
	</bean>
	<bean id="methodCacheInterceptor"
		class="com.sinovatech.search.aop.MemCacheMethodInterceptor">
	</bean>

	<!-- ================	方法缓存 aop  ============== -->
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* com.sinovatech.search.services..*.*Service.*(..))"
			advice-ref="methodCacheInterceptor" />
	</aop:config>

</beans>

